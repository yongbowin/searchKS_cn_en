/**
 * Autogenerated by Thrift Compiler (0.10.0)
 * <p>
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *
 * @generated
 */
package xin.aitech.eckg.thrift.searchKS;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2017-07-04")
public class EventPayload implements org.apache.thrift.TBase<EventPayload, EventPayload._Fields>, java.io.Serializable, Cloneable, Comparable<EventPayload> {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("EventPayload");

    private static final org.apache.thrift.protocol.TField OBJECT_URL_FIELD_DESC = new org.apache.thrift.protocol.TField("objectUrl", org.apache.thrift.protocol.TType.STRING, (short) 1);
    private static final org.apache.thrift.protocol.TField OBJECT_LABEL_FIELD_DESC = new org.apache.thrift.protocol.TField("objectLabel", org.apache.thrift.protocol.TType.STRING, (short) 2);
    private static final org.apache.thrift.protocol.TField VERB_URL_FIELD_DESC = new org.apache.thrift.protocol.TField("verbUrl", org.apache.thrift.protocol.TType.STRING, (short) 3);
    private static final org.apache.thrift.protocol.TField VERB_LABEL_FIELD_DESC = new org.apache.thrift.protocol.TField("verbLabel", org.apache.thrift.protocol.TType.STRING, (short) 4);
    private static final org.apache.thrift.protocol.TField SUBJECT_URL_FIELD_DESC = new org.apache.thrift.protocol.TField("subjectUrl", org.apache.thrift.protocol.TType.STRING, (short) 5);
    private static final org.apache.thrift.protocol.TField SUBJECT_LABEL_FIELD_DESC = new org.apache.thrift.protocol.TField("subjectLabel", org.apache.thrift.protocol.TType.STRING, (short) 6);
    private static final org.apache.thrift.protocol.TField IN_DATE_TIME_URL_FIELD_DESC = new org.apache.thrift.protocol.TField("inDateTimeUrl", org.apache.thrift.protocol.TType.STRING, (short) 7);
    private static final org.apache.thrift.protocol.TField BEGINNING_TIME_URL_FIELD_DESC = new org.apache.thrift.protocol.TField("beginningTimeUrl", org.apache.thrift.protocol.TType.STRING, (short) 8);
    private static final org.apache.thrift.protocol.TField END_TIME_URL_FIELD_DESC = new org.apache.thrift.protocol.TField("endTimeUrl", org.apache.thrift.protocol.TType.STRING, (short) 9);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new EventPayloadStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new EventPayloadTupleSchemeFactory();

    public java.lang.String objectUrl; // required
    public java.lang.String objectLabel; // required
    public java.lang.String verbUrl; // required
    public java.lang.String verbLabel; // required
    public java.lang.String subjectUrl; // required
    public java.lang.String subjectLabel; // required
    public java.lang.String inDateTimeUrl; // required
    public java.lang.String beginningTimeUrl; // required
    public java.lang.String endTimeUrl; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
        OBJECT_URL((short) 1, "objectUrl"),
        OBJECT_LABEL((short) 2, "objectLabel"),
        VERB_URL((short) 3, "verbUrl"),
        VERB_LABEL((short) 4, "verbLabel"),
        SUBJECT_URL((short) 5, "subjectUrl"),
        SUBJECT_LABEL((short) 6, "subjectLabel"),
        IN_DATE_TIME_URL((short) 7, "inDateTimeUrl"),
        BEGINNING_TIME_URL((short) 8, "beginningTimeUrl"),
        END_TIME_URL((short) 9, "endTimeUrl");

        private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

        static {
            for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
                byName.put(field.getFieldName(), field);
            }
        }

        /**
         * Find the _Fields constant that matches fieldId, or null if its not found.
         */
        public static _Fields findByThriftId(int fieldId) {
            switch (fieldId) {
                case 1: // OBJECT_URL
                    return OBJECT_URL;
                case 2: // OBJECT_LABEL
                    return OBJECT_LABEL;
                case 3: // VERB_URL
                    return VERB_URL;
                case 4: // VERB_LABEL
                    return VERB_LABEL;
                case 5: // SUBJECT_URL
                    return SUBJECT_URL;
                case 6: // SUBJECT_LABEL
                    return SUBJECT_LABEL;
                case 7: // IN_DATE_TIME_URL
                    return IN_DATE_TIME_URL;
                case 8: // BEGINNING_TIME_URL
                    return BEGINNING_TIME_URL;
                case 9: // END_TIME_URL
                    return END_TIME_URL;
                default:
                    return null;
            }
        }

        /**
         * Find the _Fields constant that matches fieldId, throwing an exception
         * if it is not found.
         */
        public static _Fields findByThriftIdOrThrow(int fieldId) {
            _Fields fields = findByThriftId(fieldId);
            if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
            return fields;
        }

        /**
         * Find the _Fields constant that matches name, or null if its not found.
         */
        public static _Fields findByName(java.lang.String name) {
            return byName.get(name);
        }

        private final short _thriftId;
        private final java.lang.String _fieldName;

        _Fields(short thriftId, java.lang.String fieldName) {
            _thriftId = thriftId;
            _fieldName = fieldName;
        }

        public short getThriftFieldId() {
            return _thriftId;
        }

        public java.lang.String getFieldName() {
            return _fieldName;
        }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;

    static {
        java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
        tmpMap.put(_Fields.OBJECT_URL, new org.apache.thrift.meta_data.FieldMetaData("objectUrl", org.apache.thrift.TFieldRequirementType.DEFAULT,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
        tmpMap.put(_Fields.OBJECT_LABEL, new org.apache.thrift.meta_data.FieldMetaData("objectLabel", org.apache.thrift.TFieldRequirementType.DEFAULT,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
        tmpMap.put(_Fields.VERB_URL, new org.apache.thrift.meta_data.FieldMetaData("verbUrl", org.apache.thrift.TFieldRequirementType.DEFAULT,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
        tmpMap.put(_Fields.VERB_LABEL, new org.apache.thrift.meta_data.FieldMetaData("verbLabel", org.apache.thrift.TFieldRequirementType.DEFAULT,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
        tmpMap.put(_Fields.SUBJECT_URL, new org.apache.thrift.meta_data.FieldMetaData("subjectUrl", org.apache.thrift.TFieldRequirementType.DEFAULT,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
        tmpMap.put(_Fields.SUBJECT_LABEL, new org.apache.thrift.meta_data.FieldMetaData("subjectLabel", org.apache.thrift.TFieldRequirementType.DEFAULT,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
        tmpMap.put(_Fields.IN_DATE_TIME_URL, new org.apache.thrift.meta_data.FieldMetaData("inDateTimeUrl", org.apache.thrift.TFieldRequirementType.DEFAULT,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
        tmpMap.put(_Fields.BEGINNING_TIME_URL, new org.apache.thrift.meta_data.FieldMetaData("beginningTimeUrl", org.apache.thrift.TFieldRequirementType.DEFAULT,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
        tmpMap.put(_Fields.END_TIME_URL, new org.apache.thrift.meta_data.FieldMetaData("endTimeUrl", org.apache.thrift.TFieldRequirementType.DEFAULT,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
        metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
        org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(EventPayload.class, metaDataMap);
    }

    public EventPayload() {
    }

    public EventPayload(
            java.lang.String objectUrl,
            java.lang.String objectLabel,
            java.lang.String verbUrl,
            java.lang.String verbLabel,
            java.lang.String subjectUrl,
            java.lang.String subjectLabel,
            java.lang.String inDateTimeUrl,
            java.lang.String beginningTimeUrl,
            java.lang.String endTimeUrl) {
        this();
        this.objectUrl = objectUrl;
        this.objectLabel = objectLabel;
        this.verbUrl = verbUrl;
        this.verbLabel = verbLabel;
        this.subjectUrl = subjectUrl;
        this.subjectLabel = subjectLabel;
        this.inDateTimeUrl = inDateTimeUrl;
        this.beginningTimeUrl = beginningTimeUrl;
        this.endTimeUrl = endTimeUrl;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public EventPayload(EventPayload other) {
        if (other.isSetObjectUrl()) {
            this.objectUrl = other.objectUrl;
        }
        if (other.isSetObjectLabel()) {
            this.objectLabel = other.objectLabel;
        }
        if (other.isSetVerbUrl()) {
            this.verbUrl = other.verbUrl;
        }
        if (other.isSetVerbLabel()) {
            this.verbLabel = other.verbLabel;
        }
        if (other.isSetSubjectUrl()) {
            this.subjectUrl = other.subjectUrl;
        }
        if (other.isSetSubjectLabel()) {
            this.subjectLabel = other.subjectLabel;
        }
        if (other.isSetInDateTimeUrl()) {
            this.inDateTimeUrl = other.inDateTimeUrl;
        }
        if (other.isSetBeginningTimeUrl()) {
            this.beginningTimeUrl = other.beginningTimeUrl;
        }
        if (other.isSetEndTimeUrl()) {
            this.endTimeUrl = other.endTimeUrl;
        }
    }

    public EventPayload deepCopy() {
        return new EventPayload(this);
    }

    @Override
    public void clear() {
        this.objectUrl = null;
        this.objectLabel = null;
        this.verbUrl = null;
        this.verbLabel = null;
        this.subjectUrl = null;
        this.subjectLabel = null;
        this.inDateTimeUrl = null;
        this.beginningTimeUrl = null;
        this.endTimeUrl = null;
    }

    public java.lang.String getObjectUrl() {
        return this.objectUrl;
    }

    public EventPayload setObjectUrl(java.lang.String objectUrl) {
        this.objectUrl = objectUrl;
        return this;
    }

    public void unsetObjectUrl() {
        this.objectUrl = null;
    }

    /** Returns true if field objectUrl is set (has been assigned a value) and false otherwise */
    public boolean isSetObjectUrl() {
        return this.objectUrl != null;
    }

    public void setObjectUrlIsSet(boolean value) {
        if (!value) {
            this.objectUrl = null;
        }
    }

    public java.lang.String getObjectLabel() {
        return this.objectLabel;
    }

    public EventPayload setObjectLabel(java.lang.String objectLabel) {
        this.objectLabel = objectLabel;
        return this;
    }

    public void unsetObjectLabel() {
        this.objectLabel = null;
    }

    /** Returns true if field objectLabel is set (has been assigned a value) and false otherwise */
    public boolean isSetObjectLabel() {
        return this.objectLabel != null;
    }

    public void setObjectLabelIsSet(boolean value) {
        if (!value) {
            this.objectLabel = null;
        }
    }

    public java.lang.String getVerbUrl() {
        return this.verbUrl;
    }

    public EventPayload setVerbUrl(java.lang.String verbUrl) {
        this.verbUrl = verbUrl;
        return this;
    }

    public void unsetVerbUrl() {
        this.verbUrl = null;
    }

    /** Returns true if field verbUrl is set (has been assigned a value) and false otherwise */
    public boolean isSetVerbUrl() {
        return this.verbUrl != null;
    }

    public void setVerbUrlIsSet(boolean value) {
        if (!value) {
            this.verbUrl = null;
        }
    }

    public java.lang.String getVerbLabel() {
        return this.verbLabel;
    }

    public EventPayload setVerbLabel(java.lang.String verbLabel) {
        this.verbLabel = verbLabel;
        return this;
    }

    public void unsetVerbLabel() {
        this.verbLabel = null;
    }

    /** Returns true if field verbLabel is set (has been assigned a value) and false otherwise */
    public boolean isSetVerbLabel() {
        return this.verbLabel != null;
    }

    public void setVerbLabelIsSet(boolean value) {
        if (!value) {
            this.verbLabel = null;
        }
    }

    public java.lang.String getSubjectUrl() {
        return this.subjectUrl;
    }

    public EventPayload setSubjectUrl(java.lang.String subjectUrl) {
        this.subjectUrl = subjectUrl;
        return this;
    }

    public void unsetSubjectUrl() {
        this.subjectUrl = null;
    }

    /** Returns true if field subjectUrl is set (has been assigned a value) and false otherwise */
    public boolean isSetSubjectUrl() {
        return this.subjectUrl != null;
    }

    public void setSubjectUrlIsSet(boolean value) {
        if (!value) {
            this.subjectUrl = null;
        }
    }

    public java.lang.String getSubjectLabel() {
        return this.subjectLabel;
    }

    public EventPayload setSubjectLabel(java.lang.String subjectLabel) {
        this.subjectLabel = subjectLabel;
        return this;
    }

    public void unsetSubjectLabel() {
        this.subjectLabel = null;
    }

    /** Returns true if field subjectLabel is set (has been assigned a value) and false otherwise */
    public boolean isSetSubjectLabel() {
        return this.subjectLabel != null;
    }

    public void setSubjectLabelIsSet(boolean value) {
        if (!value) {
            this.subjectLabel = null;
        }
    }

    public java.lang.String getInDateTimeUrl() {
        return this.inDateTimeUrl;
    }

    public EventPayload setInDateTimeUrl(java.lang.String inDateTimeUrl) {
        this.inDateTimeUrl = inDateTimeUrl;
        return this;
    }

    public void unsetInDateTimeUrl() {
        this.inDateTimeUrl = null;
    }

    /** Returns true if field inDateTimeUrl is set (has been assigned a value) and false otherwise */
    public boolean isSetInDateTimeUrl() {
        return this.inDateTimeUrl != null;
    }

    public void setInDateTimeUrlIsSet(boolean value) {
        if (!value) {
            this.inDateTimeUrl = null;
        }
    }

    public java.lang.String getBeginningTimeUrl() {
        return this.beginningTimeUrl;
    }

    public EventPayload setBeginningTimeUrl(java.lang.String beginningTimeUrl) {
        this.beginningTimeUrl = beginningTimeUrl;
        return this;
    }

    public void unsetBeginningTimeUrl() {
        this.beginningTimeUrl = null;
    }

    /** Returns true if field beginningTimeUrl is set (has been assigned a value) and false otherwise */
    public boolean isSetBeginningTimeUrl() {
        return this.beginningTimeUrl != null;
    }

    public void setBeginningTimeUrlIsSet(boolean value) {
        if (!value) {
            this.beginningTimeUrl = null;
        }
    }

    public java.lang.String getEndTimeUrl() {
        return this.endTimeUrl;
    }

    public EventPayload setEndTimeUrl(java.lang.String endTimeUrl) {
        this.endTimeUrl = endTimeUrl;
        return this;
    }

    public void unsetEndTimeUrl() {
        this.endTimeUrl = null;
    }

    /** Returns true if field endTimeUrl is set (has been assigned a value) and false otherwise */
    public boolean isSetEndTimeUrl() {
        return this.endTimeUrl != null;
    }

    public void setEndTimeUrlIsSet(boolean value) {
        if (!value) {
            this.endTimeUrl = null;
        }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
        switch (field) {
            case OBJECT_URL:
                if (value == null) {
                    unsetObjectUrl();
                } else {
                    setObjectUrl((java.lang.String) value);
                }
                break;

            case OBJECT_LABEL:
                if (value == null) {
                    unsetObjectLabel();
                } else {
                    setObjectLabel((java.lang.String) value);
                }
                break;

            case VERB_URL:
                if (value == null) {
                    unsetVerbUrl();
                } else {
                    setVerbUrl((java.lang.String) value);
                }
                break;

            case VERB_LABEL:
                if (value == null) {
                    unsetVerbLabel();
                } else {
                    setVerbLabel((java.lang.String) value);
                }
                break;

            case SUBJECT_URL:
                if (value == null) {
                    unsetSubjectUrl();
                } else {
                    setSubjectUrl((java.lang.String) value);
                }
                break;

            case SUBJECT_LABEL:
                if (value == null) {
                    unsetSubjectLabel();
                } else {
                    setSubjectLabel((java.lang.String) value);
                }
                break;

            case IN_DATE_TIME_URL:
                if (value == null) {
                    unsetInDateTimeUrl();
                } else {
                    setInDateTimeUrl((java.lang.String) value);
                }
                break;

            case BEGINNING_TIME_URL:
                if (value == null) {
                    unsetBeginningTimeUrl();
                } else {
                    setBeginningTimeUrl((java.lang.String) value);
                }
                break;

            case END_TIME_URL:
                if (value == null) {
                    unsetEndTimeUrl();
                } else {
                    setEndTimeUrl((java.lang.String) value);
                }
                break;

        }
    }

    public java.lang.Object getFieldValue(_Fields field) {
        switch (field) {
            case OBJECT_URL:
                return getObjectUrl();

            case OBJECT_LABEL:
                return getObjectLabel();

            case VERB_URL:
                return getVerbUrl();

            case VERB_LABEL:
                return getVerbLabel();

            case SUBJECT_URL:
                return getSubjectUrl();

            case SUBJECT_LABEL:
                return getSubjectLabel();

            case IN_DATE_TIME_URL:
                return getInDateTimeUrl();

            case BEGINNING_TIME_URL:
                return getBeginningTimeUrl();

            case END_TIME_URL:
                return getEndTimeUrl();

        }
        throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
        if (field == null) {
            throw new java.lang.IllegalArgumentException();
        }

        switch (field) {
            case OBJECT_URL:
                return isSetObjectUrl();
            case OBJECT_LABEL:
                return isSetObjectLabel();
            case VERB_URL:
                return isSetVerbUrl();
            case VERB_LABEL:
                return isSetVerbLabel();
            case SUBJECT_URL:
                return isSetSubjectUrl();
            case SUBJECT_LABEL:
                return isSetSubjectLabel();
            case IN_DATE_TIME_URL:
                return isSetInDateTimeUrl();
            case BEGINNING_TIME_URL:
                return isSetBeginningTimeUrl();
            case END_TIME_URL:
                return isSetEndTimeUrl();
        }
        throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
        if (that == null)
            return false;
        if (that instanceof EventPayload)
            return this.equals((EventPayload) that);
        return false;
    }

    public boolean equals(EventPayload that) {
        if (that == null)
            return false;
        if (this == that)
            return true;

        boolean this_present_objectUrl = true && this.isSetObjectUrl();
        boolean that_present_objectUrl = true && that.isSetObjectUrl();
        if (this_present_objectUrl || that_present_objectUrl) {
            if (!(this_present_objectUrl && that_present_objectUrl))
                return false;
            if (!this.objectUrl.equals(that.objectUrl))
                return false;
        }

        boolean this_present_objectLabel = true && this.isSetObjectLabel();
        boolean that_present_objectLabel = true && that.isSetObjectLabel();
        if (this_present_objectLabel || that_present_objectLabel) {
            if (!(this_present_objectLabel && that_present_objectLabel))
                return false;
            if (!this.objectLabel.equals(that.objectLabel))
                return false;
        }

        boolean this_present_verbUrl = true && this.isSetVerbUrl();
        boolean that_present_verbUrl = true && that.isSetVerbUrl();
        if (this_present_verbUrl || that_present_verbUrl) {
            if (!(this_present_verbUrl && that_present_verbUrl))
                return false;
            if (!this.verbUrl.equals(that.verbUrl))
                return false;
        }

        boolean this_present_verbLabel = true && this.isSetVerbLabel();
        boolean that_present_verbLabel = true && that.isSetVerbLabel();
        if (this_present_verbLabel || that_present_verbLabel) {
            if (!(this_present_verbLabel && that_present_verbLabel))
                return false;
            if (!this.verbLabel.equals(that.verbLabel))
                return false;
        }

        boolean this_present_subjectUrl = true && this.isSetSubjectUrl();
        boolean that_present_subjectUrl = true && that.isSetSubjectUrl();
        if (this_present_subjectUrl || that_present_subjectUrl) {
            if (!(this_present_subjectUrl && that_present_subjectUrl))
                return false;
            if (!this.subjectUrl.equals(that.subjectUrl))
                return false;
        }

        boolean this_present_subjectLabel = true && this.isSetSubjectLabel();
        boolean that_present_subjectLabel = true && that.isSetSubjectLabel();
        if (this_present_subjectLabel || that_present_subjectLabel) {
            if (!(this_present_subjectLabel && that_present_subjectLabel))
                return false;
            if (!this.subjectLabel.equals(that.subjectLabel))
                return false;
        }

        boolean this_present_inDateTimeUrl = true && this.isSetInDateTimeUrl();
        boolean that_present_inDateTimeUrl = true && that.isSetInDateTimeUrl();
        if (this_present_inDateTimeUrl || that_present_inDateTimeUrl) {
            if (!(this_present_inDateTimeUrl && that_present_inDateTimeUrl))
                return false;
            if (!this.inDateTimeUrl.equals(that.inDateTimeUrl))
                return false;
        }

        boolean this_present_beginningTimeUrl = true && this.isSetBeginningTimeUrl();
        boolean that_present_beginningTimeUrl = true && that.isSetBeginningTimeUrl();
        if (this_present_beginningTimeUrl || that_present_beginningTimeUrl) {
            if (!(this_present_beginningTimeUrl && that_present_beginningTimeUrl))
                return false;
            if (!this.beginningTimeUrl.equals(that.beginningTimeUrl))
                return false;
        }

        boolean this_present_endTimeUrl = true && this.isSetEndTimeUrl();
        boolean that_present_endTimeUrl = true && that.isSetEndTimeUrl();
        if (this_present_endTimeUrl || that_present_endTimeUrl) {
            if (!(this_present_endTimeUrl && that_present_endTimeUrl))
                return false;
            if (!this.endTimeUrl.equals(that.endTimeUrl))
                return false;
        }

        return true;
    }

    @Override
    public int hashCode() {
        int hashCode = 1;

        hashCode = hashCode * 8191 + ((isSetObjectUrl()) ? 131071 : 524287);
        if (isSetObjectUrl())
            hashCode = hashCode * 8191 + objectUrl.hashCode();

        hashCode = hashCode * 8191 + ((isSetObjectLabel()) ? 131071 : 524287);
        if (isSetObjectLabel())
            hashCode = hashCode * 8191 + objectLabel.hashCode();

        hashCode = hashCode * 8191 + ((isSetVerbUrl()) ? 131071 : 524287);
        if (isSetVerbUrl())
            hashCode = hashCode * 8191 + verbUrl.hashCode();

        hashCode = hashCode * 8191 + ((isSetVerbLabel()) ? 131071 : 524287);
        if (isSetVerbLabel())
            hashCode = hashCode * 8191 + verbLabel.hashCode();

        hashCode = hashCode * 8191 + ((isSetSubjectUrl()) ? 131071 : 524287);
        if (isSetSubjectUrl())
            hashCode = hashCode * 8191 + subjectUrl.hashCode();

        hashCode = hashCode * 8191 + ((isSetSubjectLabel()) ? 131071 : 524287);
        if (isSetSubjectLabel())
            hashCode = hashCode * 8191 + subjectLabel.hashCode();

        hashCode = hashCode * 8191 + ((isSetInDateTimeUrl()) ? 131071 : 524287);
        if (isSetInDateTimeUrl())
            hashCode = hashCode * 8191 + inDateTimeUrl.hashCode();

        hashCode = hashCode * 8191 + ((isSetBeginningTimeUrl()) ? 131071 : 524287);
        if (isSetBeginningTimeUrl())
            hashCode = hashCode * 8191 + beginningTimeUrl.hashCode();

        hashCode = hashCode * 8191 + ((isSetEndTimeUrl()) ? 131071 : 524287);
        if (isSetEndTimeUrl())
            hashCode = hashCode * 8191 + endTimeUrl.hashCode();

        return hashCode;
    }

    @Override
    public int compareTo(EventPayload other) {
        if (!getClass().equals(other.getClass())) {
            return getClass().getName().compareTo(other.getClass().getName());
        }

        int lastComparison = 0;

        lastComparison = java.lang.Boolean.valueOf(isSetObjectUrl()).compareTo(other.isSetObjectUrl());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetObjectUrl()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.objectUrl, other.objectUrl);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetObjectLabel()).compareTo(other.isSetObjectLabel());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetObjectLabel()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.objectLabel, other.objectLabel);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetVerbUrl()).compareTo(other.isSetVerbUrl());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetVerbUrl()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.verbUrl, other.verbUrl);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetVerbLabel()).compareTo(other.isSetVerbLabel());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetVerbLabel()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.verbLabel, other.verbLabel);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetSubjectUrl()).compareTo(other.isSetSubjectUrl());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetSubjectUrl()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.subjectUrl, other.subjectUrl);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetSubjectLabel()).compareTo(other.isSetSubjectLabel());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetSubjectLabel()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.subjectLabel, other.subjectLabel);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetInDateTimeUrl()).compareTo(other.isSetInDateTimeUrl());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetInDateTimeUrl()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.inDateTimeUrl, other.inDateTimeUrl);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetBeginningTimeUrl()).compareTo(other.isSetBeginningTimeUrl());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetBeginningTimeUrl()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.beginningTimeUrl, other.beginningTimeUrl);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetEndTimeUrl()).compareTo(other.isSetEndTimeUrl());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetEndTimeUrl()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.endTimeUrl, other.endTimeUrl);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        return 0;
    }

    public _Fields fieldForId(int fieldId) {
        return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
        scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
        scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
        java.lang.StringBuilder sb = new java.lang.StringBuilder("EventPayload(");
        boolean first = true;

        sb.append("objectUrl:");
        if (this.objectUrl == null) {
            sb.append("null");
        } else {
            sb.append(this.objectUrl);
        }
        first = false;
        if (!first) sb.append(", ");
        sb.append("objectLabel:");
        if (this.objectLabel == null) {
            sb.append("null");
        } else {
            sb.append(this.objectLabel);
        }
        first = false;
        if (!first) sb.append(", ");
        sb.append("verbUrl:");
        if (this.verbUrl == null) {
            sb.append("null");
        } else {
            sb.append(this.verbUrl);
        }
        first = false;
        if (!first) sb.append(", ");
        sb.append("verbLabel:");
        if (this.verbLabel == null) {
            sb.append("null");
        } else {
            sb.append(this.verbLabel);
        }
        first = false;
        if (!first) sb.append(", ");
        sb.append("subjectUrl:");
        if (this.subjectUrl == null) {
            sb.append("null");
        } else {
            sb.append(this.subjectUrl);
        }
        first = false;
        if (!first) sb.append(", ");
        sb.append("subjectLabel:");
        if (this.subjectLabel == null) {
            sb.append("null");
        } else {
            sb.append(this.subjectLabel);
        }
        first = false;
        if (!first) sb.append(", ");
        sb.append("inDateTimeUrl:");
        if (this.inDateTimeUrl == null) {
            sb.append("null");
        } else {
            sb.append(this.inDateTimeUrl);
        }
        first = false;
        if (!first) sb.append(", ");
        sb.append("beginningTimeUrl:");
        if (this.beginningTimeUrl == null) {
            sb.append("null");
        } else {
            sb.append(this.beginningTimeUrl);
        }
        first = false;
        if (!first) sb.append(", ");
        sb.append("endTimeUrl:");
        if (this.endTimeUrl == null) {
            sb.append("null");
        } else {
            sb.append(this.endTimeUrl);
        }
        first = false;
        sb.append(")");
        return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
        // check for required fields
        // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
        try {
            write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
        } catch (org.apache.thrift.TException te) {
            throw new java.io.IOException(te);
        }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
        try {
            read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
        } catch (org.apache.thrift.TException te) {
            throw new java.io.IOException(te);
        }
    }

    private static class EventPayloadStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
        public EventPayloadStandardScheme getScheme() {
            return new EventPayloadStandardScheme();
        }
    }

    private static class EventPayloadStandardScheme extends org.apache.thrift.scheme.StandardScheme<EventPayload> {

        public void read(org.apache.thrift.protocol.TProtocol iprot, EventPayload struct) throws org.apache.thrift.TException {
            org.apache.thrift.protocol.TField schemeField;
            iprot.readStructBegin();
            while (true) {
                schemeField = iprot.readFieldBegin();
                if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
                    break;
                }
                switch (schemeField.id) {
                    case 1: // OBJECT_URL
                        if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                            struct.objectUrl = iprot.readString();
                            struct.setObjectUrlIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 2: // OBJECT_LABEL
                        if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                            struct.objectLabel = iprot.readString();
                            struct.setObjectLabelIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 3: // VERB_URL
                        if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                            struct.verbUrl = iprot.readString();
                            struct.setVerbUrlIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 4: // VERB_LABEL
                        if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                            struct.verbLabel = iprot.readString();
                            struct.setVerbLabelIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 5: // SUBJECT_URL
                        if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                            struct.subjectUrl = iprot.readString();
                            struct.setSubjectUrlIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 6: // SUBJECT_LABEL
                        if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                            struct.subjectLabel = iprot.readString();
                            struct.setSubjectLabelIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 7: // IN_DATE_TIME_URL
                        if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                            struct.inDateTimeUrl = iprot.readString();
                            struct.setInDateTimeUrlIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 8: // BEGINNING_TIME_URL
                        if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                            struct.beginningTimeUrl = iprot.readString();
                            struct.setBeginningTimeUrlIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 9: // END_TIME_URL
                        if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                            struct.endTimeUrl = iprot.readString();
                            struct.setEndTimeUrlIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    default:
                        org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                }
                iprot.readFieldEnd();
            }
            iprot.readStructEnd();

            // check for required fields of primitive type, which can't be checked in the validate method
            struct.validate();
        }

        public void write(org.apache.thrift.protocol.TProtocol oprot, EventPayload struct) throws org.apache.thrift.TException {
            struct.validate();

            oprot.writeStructBegin(STRUCT_DESC);
            if (struct.objectUrl != null) {
                oprot.writeFieldBegin(OBJECT_URL_FIELD_DESC);
                oprot.writeString(struct.objectUrl);
                oprot.writeFieldEnd();
            }
            if (struct.objectLabel != null) {
                oprot.writeFieldBegin(OBJECT_LABEL_FIELD_DESC);
                oprot.writeString(struct.objectLabel);
                oprot.writeFieldEnd();
            }
            if (struct.verbUrl != null) {
                oprot.writeFieldBegin(VERB_URL_FIELD_DESC);
                oprot.writeString(struct.verbUrl);
                oprot.writeFieldEnd();
            }
            if (struct.verbLabel != null) {
                oprot.writeFieldBegin(VERB_LABEL_FIELD_DESC);
                oprot.writeString(struct.verbLabel);
                oprot.writeFieldEnd();
            }
            if (struct.subjectUrl != null) {
                oprot.writeFieldBegin(SUBJECT_URL_FIELD_DESC);
                oprot.writeString(struct.subjectUrl);
                oprot.writeFieldEnd();
            }
            if (struct.subjectLabel != null) {
                oprot.writeFieldBegin(SUBJECT_LABEL_FIELD_DESC);
                oprot.writeString(struct.subjectLabel);
                oprot.writeFieldEnd();
            }
            if (struct.inDateTimeUrl != null) {
                oprot.writeFieldBegin(IN_DATE_TIME_URL_FIELD_DESC);
                oprot.writeString(struct.inDateTimeUrl);
                oprot.writeFieldEnd();
            }
            if (struct.beginningTimeUrl != null) {
                oprot.writeFieldBegin(BEGINNING_TIME_URL_FIELD_DESC);
                oprot.writeString(struct.beginningTimeUrl);
                oprot.writeFieldEnd();
            }
            if (struct.endTimeUrl != null) {
                oprot.writeFieldBegin(END_TIME_URL_FIELD_DESC);
                oprot.writeString(struct.endTimeUrl);
                oprot.writeFieldEnd();
            }
            oprot.writeFieldStop();
            oprot.writeStructEnd();
        }

    }

    private static class EventPayloadTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
        public EventPayloadTupleScheme getScheme() {
            return new EventPayloadTupleScheme();
        }
    }

    private static class EventPayloadTupleScheme extends org.apache.thrift.scheme.TupleScheme<EventPayload> {

        @Override
        public void write(org.apache.thrift.protocol.TProtocol prot, EventPayload struct) throws org.apache.thrift.TException {
            org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
            java.util.BitSet optionals = new java.util.BitSet();
            if (struct.isSetObjectUrl()) {
                optionals.set(0);
            }
            if (struct.isSetObjectLabel()) {
                optionals.set(1);
            }
            if (struct.isSetVerbUrl()) {
                optionals.set(2);
            }
            if (struct.isSetVerbLabel()) {
                optionals.set(3);
            }
            if (struct.isSetSubjectUrl()) {
                optionals.set(4);
            }
            if (struct.isSetSubjectLabel()) {
                optionals.set(5);
            }
            if (struct.isSetInDateTimeUrl()) {
                optionals.set(6);
            }
            if (struct.isSetBeginningTimeUrl()) {
                optionals.set(7);
            }
            if (struct.isSetEndTimeUrl()) {
                optionals.set(8);
            }
            oprot.writeBitSet(optionals, 9);
            if (struct.isSetObjectUrl()) {
                oprot.writeString(struct.objectUrl);
            }
            if (struct.isSetObjectLabel()) {
                oprot.writeString(struct.objectLabel);
            }
            if (struct.isSetVerbUrl()) {
                oprot.writeString(struct.verbUrl);
            }
            if (struct.isSetVerbLabel()) {
                oprot.writeString(struct.verbLabel);
            }
            if (struct.isSetSubjectUrl()) {
                oprot.writeString(struct.subjectUrl);
            }
            if (struct.isSetSubjectLabel()) {
                oprot.writeString(struct.subjectLabel);
            }
            if (struct.isSetInDateTimeUrl()) {
                oprot.writeString(struct.inDateTimeUrl);
            }
            if (struct.isSetBeginningTimeUrl()) {
                oprot.writeString(struct.beginningTimeUrl);
            }
            if (struct.isSetEndTimeUrl()) {
                oprot.writeString(struct.endTimeUrl);
            }
        }

        @Override
        public void read(org.apache.thrift.protocol.TProtocol prot, EventPayload struct) throws org.apache.thrift.TException {
            org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
            java.util.BitSet incoming = iprot.readBitSet(9);
            if (incoming.get(0)) {
                struct.objectUrl = iprot.readString();
                struct.setObjectUrlIsSet(true);
            }
            if (incoming.get(1)) {
                struct.objectLabel = iprot.readString();
                struct.setObjectLabelIsSet(true);
            }
            if (incoming.get(2)) {
                struct.verbUrl = iprot.readString();
                struct.setVerbUrlIsSet(true);
            }
            if (incoming.get(3)) {
                struct.verbLabel = iprot.readString();
                struct.setVerbLabelIsSet(true);
            }
            if (incoming.get(4)) {
                struct.subjectUrl = iprot.readString();
                struct.setSubjectUrlIsSet(true);
            }
            if (incoming.get(5)) {
                struct.subjectLabel = iprot.readString();
                struct.setSubjectLabelIsSet(true);
            }
            if (incoming.get(6)) {
                struct.inDateTimeUrl = iprot.readString();
                struct.setInDateTimeUrlIsSet(true);
            }
            if (incoming.get(7)) {
                struct.beginningTimeUrl = iprot.readString();
                struct.setBeginningTimeUrlIsSet(true);
            }
            if (incoming.get(8)) {
                struct.endTimeUrl = iprot.readString();
                struct.setEndTimeUrlIsSet(true);
            }
        }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
        return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
}

